{"version":3,"sources":["request.js","axios.js","components/rows/rows.js","components/banner/banner.js","components/navbar/navbar.js","App.js","reportWebVitals.js","index.js"],"names":["API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","instance","axios","create","baseURL","Row","title","fetchURL","isLargeRow","useState","movies","setMovies","trailerURL","setTrailerURL","useEffect","a","get","request","data","results","fetchData","className","classname","map","movie","onClick","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","backdrop_path","alt","name","id","style","padding","videoId","opts","height","width","playerVars","autoplay","Banner","str","n","Math","floor","random","length","backgroundSize","objectFit","backgroundImage","backgroundPosition","original_name","overview","substr","Navbar","show","handleshow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f160329e.chunk.js","sourcesContent":["const API_KEY = '84db817493cf823ebcda3070f943d6b7';\r\n\r\nconst requests = {\r\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=123`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\n\r\nexport default requests;\r\n","import axios from 'axios';\r\nconst instance = axios.create({\r\n  baseURL: 'https://api.themoviedb.org/3',\r\n});\r\n\r\nexport default instance;\r\n","import React from 'react';\r\nimport './rows.css';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from '../../axios';\r\nimport Youtube from 'react-youtube';\r\nimport movieTrailer from 'movie-trailer';\r\n\r\nconst baseURL = 'https://image.tmdb.org/t/p/original/';\r\n\r\nfunction Row({ title, fetchURL, isLargeRow }) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerURL, setTrailerURL] = useState('');\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchURL);\r\n      setMovies(request.data.results);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchURL]);\r\n\r\n  const opts = {\r\n    height: '390',\r\n    width: '99%',\r\n    playerVars: {\r\n      autoplay: 0,\r\n    },\r\n  };\r\n\r\n  const handleClick = (movie) => {\r\n    // console.table(movie?.title)\r\n    if (trailerURL) {\r\n      setTrailerURL('');\r\n    } else {\r\n      movieTrailer(movie?.title || '')\r\n        .then((url) => {\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          setTrailerURL(urlParams.get('v'));\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h1 classname=\"title\">{title}</h1>\r\n      <div className=\"rowPosters\">\r\n        {movies.map((movie) => (\r\n          <img\r\n            key={movie.id}\r\n            onClick={() => handleClick(movie)}\r\n            className={`rowPoster ${isLargeRow && 'rowPosterLarge'}`}\r\n            src={`${baseURL}${\r\n              isLargeRow ? movie.poster_path : movie.backdrop_path\r\n            }`}\r\n            alt={movie.name}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div style={{ padding: '40px' }}>\r\n        {trailerURL && <Youtube videoId={trailerURL} opts={opts} />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","import React from 'react';\r\nimport './banner.css';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from '../../axios';\r\nimport requests from '../../request';\r\n\r\nfunction Banner() {\r\n  const [movie, setMovies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchNetflixOriginals);\r\n      console.log(request.data.results);\r\n      setMovies(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length - 1)\r\n        ],\r\n      );\r\n\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  function truncate(str, n) {\r\n    return str?.length > n ? str.substr(0, n - 1) + '...' : str;\r\n  }\r\n\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: 'cover',\r\n        objectFit: `contain`,\r\n        backgroundImage: `url(\r\n      \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\r\n      )`,\r\n        backgroundPosition: 'center center',\r\n      }}\r\n    >\r\n      <div className=\"bannerContents\">\r\n        <div className=\"bannerTitle\">\r\n          {movie?.name || movie?.title || movie?.original_name}\r\n        </div>\r\n\r\n        <div className=\"bannerButton\">\r\n          <button className=\"bannerButtons\">Play</button>\r\n          <button className=\"bannerButtons\">My List</button>\r\n        </div>\r\n        <div className=\"movieDescription\">\r\n          <h3>{truncate(movie?.overview, 400)}</h3>\r\n        </div>\r\n      </div>\r\n      <div className=\"bannerFadeBottom\"></div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React from 'react';\r\nimport './navbar.css';\r\nimport { useState, useEffect } from 'react';\r\n\r\nfunction Navbar() {\r\n  const [show, handleshow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', () => {\r\n      if (window.scrollY > 100) {\r\n        handleshow(true);\r\n      } else handleshow(false);\r\n    });\r\n    return () => {\r\n      window.removeEventListener('scroll');\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`nav ${show && 'nav_black'}`}>\r\n      <img\r\n        className=\"nav_logo\"\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/250px-Netflix_2015_logo.svg.png\"\r\n        alt=\"Netflix Logo\"\r\n      />\r\n      <img\r\n        className=\"nav_avatar\"\r\n        src=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/366be133850498.56ba69ac36858.png\"\r\n        alt=\"Netflix Logo\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import './App.css';\nimport React from 'react';\nimport requests from './request.js';\nimport Row from './components/rows/rows.js';\nimport Banner from './components/banner/banner.js';\nimport NavBar from './components/navbar/navbar.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Banner />\n      <Row\n        isLargeRow\n        title=\"Netflix Originals\"\n        fetchURL={requests.fetchNetflixOriginals}\n      />\n      <Row title=\"Trending Now\" fetchURL={requests.fetchTrending} />\n      <Row title=\"Action Movies\" fetchURL={requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchURL={requests.fetchComedyMovies} />\n      <Row title=\"Documentaries\" fetchURL={requests.fetchDocumentaries} />\n      <Row title=\"Horror Movies\" fetchURL={requests.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchURL={requests.fetchRomanceMovies} />\n      <Row title=\"Top Rated\" fetchURL={requests.fetchTopRated} />\n    </div>\n  );\n}\n\n//https://netflix-clone-4bfac.web.app\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}